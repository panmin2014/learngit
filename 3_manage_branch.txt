/*
*作者：沐风
*目的：整理并记录个人学习git的过程，方便以后参考
*本文档大部分引用于：http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000
*/

1、创建并且切换分支
    $git checkout -b dev
  git checkout命令加上'-b'参数表示创建并切换分支，相当于以下两条命令：
    $git branch dev
	$git checkout dev
  然后可以用git branch命令会列出所有分支，当前分支前面会标一个*号：
    $git branch  

2、合并分支：
  1）dev分支的工作完成，我们就可以切换回master分支：
      $git checkout master
	切换回master分支后，再查看一个readme.txt文件，刚才添加的内容不见了！因为那个提交是在dev分支上，而master分支此刻的提交点并没有变。
  2)把dev分支的工作成果合并到master分支上，git merge命令用于合并指定分支到当前分支。合并后，再查看readme.txt的内容，就可以看到，
    和dev分支的最新提交是完全一样的。
	  $git merge dev
	注意到Fast-forward信息，Git告诉我们，这次合并是“快进模式”，也就是直接把master指向dev的当前提交，所以合并速度非常快。
	当然，也不是每次合并都能Fast-forward，我们后面会将其他方式的合并。
  3）删除分支dev
      $git branch -d dev
  因为创建、合并和删除分支非常快，所以Git鼓励你使用分支完成某个任务，合并后再删掉分支，这和直接在master分支上工作效果是一样的，但过程更安全。



3、分支管理策略
  通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。
  如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。
  合并后，我们用git log看看分支历史：
    $ git log --graph --pretty=oneline --abbrev-commit